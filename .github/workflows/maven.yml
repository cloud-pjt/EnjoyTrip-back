name: Java CI with Maven

on:
  push:
    branches: [ "main" ]         # ➜ dev에 자동 반영
  workflow_dispatch:
    inputs:
      environment:
        description: "배포 환경 선택"
        required: true
        default: "prod"
        type: choice
        options: [ "prod" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ECR_REGISTRY: 255260635764.dkr.ecr.ap-northeast-2.amazonaws.com
      ECR_REPOSITORY: enjoy-back

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml

   # 4. 현재 시간 태그 (KST)     
    - name: Get current time (KST)
      run: echo "IMAGE_TAG=$(TZ='Asia/Seoul' date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV


    - name: Show Current Time
      run: echo "Current time is $IMAGE_TAG"

    # 5. AWS 로그인
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # 6. Docker 빌드 & Push
    - name: Build, tag, and push image to Amazon ECR
      run: |
        docker build -t $ECR_REPOSITORY:${{ env.IMAGE_TAG }} .
        docker tag $ECR_REPOSITORY:${{ env.IMAGE_TAG }} $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.IMAGE_TAG }}
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.IMAGE_TAG }}

    - name: Checkout manifests repo
      uses: actions/checkout@v4
      with:
        repository: cloud-pjt/enjoy-cd
        token: ${{ secrets.GH_PAT }}
        
      # kustomize 설치 (edit set image 사용)
    - name: Install kustomize
      run: |
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
        sudo mv kustomize /usr/local/bin/

      # 대상 환경 선택: push=dev / 수동 클릭=prod
    - name: Pick target env
      id: pick
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "ENV=prod" >> $GITHUB_OUTPUT
        else
          echo "ENV=dev"  >> $GITHUB_OUTPUT
        fi

      # 이미지 태그를 Kustomize overlay에 반영
    - name: Update image tag in overlay
      run: |
        cd backend/overlays/${{ steps.pick.outputs.ENV }}
        kustomize edit set image eclipse-temurin=$ECR_REGISTRY/$BACK_REPO:$IMAGE_TAG
          
    - name: Commit and push
      run: |
        cd backend
        git config user.name "sdpup"
        git config user.email "epflswu12@gmail.com"
        if ! git diff --quiet; then
          git commit -am "Update backend image to ${{ env.IMAGE_TAG }}"
          git push
        else
          echo "No changes to commit."
        fi
    

