# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#    - name: Update dependency graph
#      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    - name: Upload test reports
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: surefire-reports
        path: '**/target/surefire-reports/*'
        
   # 4. 현재 시간 태그 (선택)
    - name: Get current time
      id: current-time
      run: echo "formattedTime=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

    - name: Show Current Time
      run: echo "Current time is ${{ steps.current-time.outputs.formattedTime }}"

    # 5. AWS 로그인
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # 6. Docker 빌드 & Push
    - name: Build, tag, and push image to Amazon ECR
      run: |
        docker build -t test/back:${{steps.current-time.outputs.formattedTime}} . 
        docker tag test/back:${{steps.current-time.outputs.formattedTime}} 868422696413.dkr.ecr.ap-northeast-2.amazonaws.com/test/back:${{steps.current-time.outputs.formattedTime}} 
        docker push 868422696413.dkr.ecr.ap-northeast-2.amazonaws.com/test/back:${{steps.current-time.outputs.formattedTime}}

